"""Build ping test"""
import os

def scons():
    """Scons function"""
    Import('env prereqs')

    tenv = env.Clone()
    tenv.Append(CPPDEFINES=['FUSE_USE_VERSION=30'])
    prereqs.require(tenv, "pmix", "mercury", "mcl")

    use_fuse3 = tenv.get('fuse3')

    if use_fuse3:
        prereqs.require(tenv, 'fuse')
        tenv.Append(CPPDEFINES=['IOF_USE_FUSE3=1'])
    else:
        if env.get('PLATFORM') == 'darwin':
            tenv.Append(CPPPATH=['/usr/local/include/osxfuse'],
                        LIBS=['osxfuse'])
        else:
            tenv.Append(LIBS=['fuse'])

    tenv.Append(CFLAGS=['-D_FILE_OFFSET_BITS=64'])
    common = tenv.Object('rpc_common')
    common += tenv.Object('rpc_handler')
    common += tenv.Object('server_backend')

    if env.get('PLATFORM') == 'posix':
        tenv.Append(LIBS=['pthread'])

    progs = tenv.Program(['client_main.c', common],
                         LIBS=['$LIBS', 'proto_common'],
                         LIBPATH=['$LIBPATH', '../common'])
    progs += tenv.Program(['server_main.c', common],
                          LIBS=['$LIBS', 'proto_common'],
                          LIBPATH=['$LIBPATH', '../common'])

    tenv.Install(os.path.join("$PREFIX", 'bin'), progs)
    tenv.Append(RPATH=os.path.join("$PREFIX", 'lib'))

if __name__ == "SCons.Script":
    scons()
