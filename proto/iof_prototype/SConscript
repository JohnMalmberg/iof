"""Build ping test"""
import os

COMMON_SRC = ['rpc_handler.c', 'server_backend.c']
TEST_SRC = ['client_main.c', 'server_main.c']

def scons():
    """Scons function"""
    Import('env prereqs test_targets')

    tenv = env.Clone()
    tenv.Append(CPPDEFINES=['FUSE_USE_VERSION=30'])
    prereqs.require(tenv, "pmix", "mercury", "mcl")

    use_fuse3 = tenv.get('fuse3')

    if use_fuse3:
        prereqs.require(tenv, 'fuse')
        tenv.Append(CPPDEFINES=['IOF_USE_FUSE3=1'])
    else:
        if env.get('PLATFORM') == 'darwin':
            tenv.Append(CPPPATH=['/usr/local/include/osxfuse'],
                        LIBS=['osxfuse'])
        else:
            tenv.Append(LIBS=['fuse'])

    tenv.Append(CFLAGS=['-D_FILE_OFFSET_BITS=64'])
    tenv.Append(CPPPATH=['../../src/test'])
    common = []
    for obj in COMMON_SRC:
        common += tenv.Object(obj)

    if env.get('PLATFORM') == 'posix':
        tenv.Append(LIBS=['pthread'])

    progs = []
    for src in TEST_SRC:
        progs += tenv.Program([src, common, test_targets])

    tenv.Install(os.path.join("$PREFIX", 'bin'), progs)
    tenv.Append(RPATH=os.path.join("$PREFIX", 'lib'))

if __name__ == "SCons.Script":
    scons()
